{"version":3,"sources":["components/DataProvider.js","App.js","reportWebVitals.js","index.js"],"names":["DataContex","createContext","DataProvider","children","useState","data","setData","a","wrapReadData","Provider","value","App","document","title","useContext","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8WAGMA,EAAaC,0BAGJ,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACrC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KADiD,4CAGjD,sBAAAC,EAAA,sDACED,EAAQ,IADV,4CAHiD,sBAUjD,OAJKD,GAN4C,mCAO/CG,GAGK,cAACR,EAAWS,SAAZ,CAAqBC,MAAO,CAAEL,QAA9B,SAAuCF,I,OCZjC,SAASQ,IACtBC,SAASC,MAAQ,UACjB,IAAQR,EDFmBS,qBAAWd,GCE9BK,KAGR,OAFAU,QAAQC,IAAIX,GAEL,KCTT,IAYeY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,UACE,cAAC,EAAD,QAGJU,SAASiB,eAAe,SAM1BZ,M","file":"static/js/main.e7f91981.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport * as dfd from \"danfojs\";\r\n\r\nconst DataContex = createContext();\r\nexport const useData = () => useContext(DataContex);\r\n\r\nexport default function DataProvider({ children }) {\r\n  const [data, setData] = useState([]);\r\n\r\n  async function wrapReadData() {\r\n    setData([]);\r\n  }\r\n  if (!data) {\r\n    wrapReadData();\r\n  }\r\n\r\n  return <DataContex.Provider value={{ data }}>{children}</DataContex.Provider>;\r\n}\r\n","import \"./App.css\";\nimport { useData } from \"./components/DataProvider.js\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nexport default function App() {\n  document.title = \"titanic\";\n  const { data } = useData();\n  console.log(data);\n\n  return null;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DataProvider from \"./components/DataProvider.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}